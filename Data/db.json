{
  "posts": [
    {
      "id": 1,
      "title": "Welcome to the new blog",
      "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      "likes": 30
    },
    {
      "id": 2,
      "title": "How to be a Net Ninja",
      "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      "likes": 15
    },
    {
      "id": 3,
      "title": "New Vue course coming soon!",
      "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      "likes": 20
    },
    {
      "title": "ESAMPLE",
      "body": "In this example, we first check if the obj value is an array using the Array.isArray() method. If it is an array, we call the forEach() method on it. Otherwise, we do not call forEach() and the error is avoided.\n\nThe Array.from() method creates a new, shallow-copied Array instance from an array-like or iterable object. In this case, we're passing the arrayLike object as the argument to Array.from(), which creates a new array with the same elements as the arrayLike object.\n\nThen, we're using the forEach() method to iterate over the elements of the arr array and log each element to the console.\n\nAnd here's an example using Object.keys:\n\nconst arrayLike = {\n  0: 'a',\n  1: 'b',\n  2: 'c',\n  length: 3\n};\n\nconst arr = Object.keys(arrayLike);\narr.forEach(element => console.log(element));\n\n// output: 0 1 2 length\nThe Object.keys() method returns an array of a given object's own enumerable property names, in the same order as we get with a normal loop. In this case, we're passing the arrayLike object as the argument to Object.keys(), which creates a new array with the keys of the arrayLike object.",
      "likes": 40,
      "id": 4
    }
  ]
}